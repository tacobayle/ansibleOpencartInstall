---
- hosts: mysql, aws_group_mysql, gcp_group_mysql, azure_group_mysql
  become: true
  # vars_files:
  #   - vars/params.yml

  tasks:

    - name: Wait 300 seconds for port 22 to become open and contain "OpenSSH"
      wait_for:
        port: 22
        host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
        #search_regex: OpenSSH
        delay: 10
      vars:
        ansible_connection: local

    - name: Wait until Cloud init is done
      wait_for:
        path: /tmp/cloudInitDone.log


    - name: Sets the root password
      mysql_user:
        name: root
        password: "{{ mysql_root_password | default('mysql_root_password') }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Removes all anonymous user accounts
      mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password | default('mysql_root_password') }}"

    - name: Removes the MySQL test database
      mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password | default('mysql_root_password') }}"

    - name: Create the MySQL database
      mysql_db:
        name: "{{ mysql_db | default('opencart') }}"
        login_user: root
        login_password: "{{ mysql_root_password | default('mysql_root_password') }}"
      tags:
        - mysql

    - name: Create database user
      mysql_user:
        name: "{{ mysql_db_user | default('opencart') }}"
        password: "{{ mysql_db_password | default('opencart') }}"
        priv: "{{ mysql_db | default('opencart') }}.*:ALL"
        login_user: root
        login_password: "{{ mysql_root_password | default('mysql_root_password') }}"
        state: present
        host: '%'
      tags:
        - mysql

    - name: "UFW - Allow HTTP on port {{ mysql_db_port | default('80') }}"
      ufw:
        rule: allow
        port: "{{ mysql_db_port | default('80') }}"
        proto: tcp
      tags:
        - mysql

    - name: Ensure SELinux is set to enforcing mode
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^bind-address'
        line: bind-address            = 0.0.0.0
      tags:
        - mysql
      notify: restart mysql

  handlers:
    - name: restart mysql
      service: name=mysql
               enabled=yes
               state=restarted
